import{r as o}from"./B_OshFF3.js";import{U as i}from"./DjTJqZtn.js";const u={loginGoogle(r){return new Promise((a,t)=>o("/wapi/userServer/login/google",{method:"POST",body:r}).then(e=>{e.code===0?(e.data.userInfoVO.expirationTimeFormat=i.timeUTCToLocal(e.data.userInfoVO.expirationTime),a(e.data)):t(e)}).catch(e=>{t(e)}))},sysLoginUser(r){return new Promise((a,t)=>(console.log("sysLoginUser-Authorization",i.getAuthorization(r.email,r.password)),o("/wapi/userServer/login/user",{method:"POST",headers:{Authorization:i.getAuthorization(r.email,r.password)}}).then(e=>{e.code===0?(e.data.userInfoVO.expirationTimeFormat=i.timeUTCToLocal(e.data.userInfoVO.expirationTime),a(e.data)):t(e)}).catch(e=>{t(e)})))},sysSignupUser(r){return new Promise((a,t)=>o("/wapi/userServer/enroll",{method:"POST",headers:{Authorization:i.getAuthorization(r.email,r.password)},body:{captcha:r.captcha}}).then(e=>{e.code===0?(e.data.userInfoVO.expirationTimeFormat=i.timeUTCToLocal(e.data.userInfoVO.expirationTime),a(e.data)):t(e)}).catch(e=>{t(e)}))},resetPassword(r){return r.password=i.EncryptRSA(r.password),new Promise((a,t)=>o("/wapi/userServer/reset/password",{method:"POST",body:r}).then(e=>{e.code===0?(e.data.userInfoVO.expirationTimeFormat=i.timeUTCToLocal(e.data.userInfoVO.expirationTime),a(e.data)):t(e)}).catch(e=>{t(e)}))},forgetPassword(r){return r.password=i.EncryptRSA(r.password),new Promise((a,t)=>o("/wapi/userServer/forget/password",{method:"POST",body:r}).then(e=>{e.code===0?(e.data.userInfoVO.expirationTimeFormat=i.timeUTCToLocal(e.data.userInfoVO.expirationTime),a(e.data)):t(e)}).catch(e=>{t(e)}))},userExist(r){return new Promise((a,t)=>o("/wapi/userServer/user/exist",{method:"POST",body:r}).then(e=>{e.code===0?a(e):t(e)}).catch(e=>{t(e)}))},sendCaptchaWithoutUser(r){return new Promise((a,t)=>o("/wapi/userServer/send/captcha/withoutUser",{method:"POST",body:r}).then(e=>{e.code===0?a(e):t(e)}).catch(e=>{t(e)}))},sendCaptcha(r){return r.captchaType=1,new Promise((a,t)=>o("/wapi/userServer/send/captcha",{method:"POST",body:r}).then(e=>{e.code===0?a(e):t(e)}).catch(e=>{t(e)}))},async firstEnter(){try{const r=await o("/wapi/userServer/first/login",{method:"GET"});if(r.code===0)return r.data;throw new Error(r)}catch(r){throw new Error(r)}},async completeGuide(){try{const r=await o("/wapi/userServer/user/tutorial",{method:"POST",body:{beginnersTutorial:!1}});if(r.code===0)return!0;throw new Error(r)}catch(r){throw new Error(r)}}};export{u as userApi};
