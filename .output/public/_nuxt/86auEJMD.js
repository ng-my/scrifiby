import"./DjTJqZtn.js";import{r as a}from"./B_OshFF3.js";const c={async getSpeakerList(e){try{const r=await a("/transcriptServer/getSpeakerList",{method:"POST",body:{id:e}});if(r.code===0)return r.data;throw new Error(r)}catch(r){throw new Error(r)}},async editFileInfo(e){try{const r=await a("/transcriptServer/editFileBaseInfo",{method:"POST",body:e});if(r.code===0)return r.data;throw new Error(r)}catch(r){throw new Error(r)}},async getTranscriptInfo(e,r){try{const t=await a("/wapi/fileServer/tran/getTranscribeResult",{method:"POST",body:{fileId:e,taskId:r}});return t.code===0?t.data:Promise.reject(t)}catch(t){throw new Error(t)}},async getTranscriptInfoWithoutToken(e,r,t){try{const n=await a("/wapi/fileServer/tran/getTranscribeResultH5",{method:"POST",body:{fileId:e,userId:t,taskId:r}});if(n.code===0)return n.data;throw new Error(n)}catch(n){throw new Error(n)}},async editFileTranscriptInfo(e){try{const r=await a("/wapi/fileServer/tran/edit",{method:"POST",body:e});return r.code===0?r.data:Promise.reject(r)}catch(r){return Promise.reject(r)}},async getOtherLangOfTranscript(e){var r;try{const t=await a("/wapi/fileServer/file/file/translate",{method:"POST",body:e});return t.code===0?((r=t.data)==null?void 0:r.text)||[]:Promise.reject(t)}catch(t){return Promise.reject(t)}},async getRecentLangById(e){try{const r=await a("/transcriptServer/getRecentLangById",{method:"POST",body:e});if(r.code===0)return r.data;throw new Error(r)}catch(r){throw new Error(r)}},async saveFileConfig(e){try{const r=await a("/wapi/fileServer/tran/save/options",{method:"POST",body:e});if(r.code===0)return r.data;throw new Error(r)}catch(r){throw new Error(r)}},async editSpeaker(e){try{const r=await a("/wapi/fileServer/tran/speaker/edit",{method:"POST",body:e});if(r.code===0)return r.data;throw new Error(r)}catch(r){throw new Error(r)}},async getRecentLang(){try{const e=await a("/wapi/fileServer/file/file/translateLang",{method:"GET"});if(e.code===0)return e.data;throw new Error(e)}catch(e){throw new Error(e)}},async getTranRecentLang(){try{const e=await a("/wapi/taskServer/api/v1/transcription/trans/lanauage/get",{method:"POST"});if(e.code===0)return e.data;throw new Error(e)}catch(e){throw new Error(e)}}};export{c as transcriptApi};
